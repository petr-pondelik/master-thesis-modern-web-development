version: "3.7"

services:

  mthesis-postgres:
    image: postgres:12.10
    container_name: mthesis-postgres
    restart: always
    environment:
      - POSTGRES_USER=mthesis_u
      - POSTGRES_PASSWORD=mthesis_p
      - POSTGRES_DB=mthesis_db
    ports:
      - '5438:5432'
    volumes:
      - ./postgres/postgres-data:/var/lib/postgresql/data

  mthesis-prisma:
    container_name: mthesis-prisma
    build:
      context: ./prisma
      dockerfile: Dockerfile
    command: yarn prisma:up
    depends_on:
      - mthesis-postgres

  mthesis-server-side:
    container_name: mthesis-server-side
    build:
      context: ./server-side
      dockerfile: Dockerfile-prod
    # Run in debug mode: yarn run start:debug
    # Run in dev mode: yarn run start:dev
    depends_on:
      - mthesis-postgres
      - mthesis-prisma
    ports:
      - '8080:3000'
    command: >
      sh -c "yarn start:prod"

  mthesis-client-side-rest:
    container_name: mthesis-client-side-rest
    build:
      context: ./client-side-rest
      dockerfile: Dockerfile
      target: production
    depends_on:
      - mthesis-postgres
      - mthesis-prisma
      - mthesis-server-side
    ports:
      - '3100:3010'

  mthesis-client-side-graphql:
    container_name: mthesis-client-side-graphql
    build:
      context: ./client-side-graphql
      dockerfile: Dockerfile
      target: production
    depends_on:
      - mthesis-postgres
      - mthesis-prisma
      - mthesis-server-side
    ports:
      - '3200:3020'

# Commands to build and run the composition
#   docker-compose -f docker-compose.prod.yml build
#   docker-compose -f docker-compose.prod.yml up
