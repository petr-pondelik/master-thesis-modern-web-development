scalar ID
scalar String
scalar Int

interface Entity {
    id: Int!
    createdAt: String!
}

interface NamedEntity {
    id: Int!
    createdAt: String!
    title: String!
}

type AuthPayload {
    access_token: String!
}

input SignInContent {
    email: String!
    password: String!
}

type User implements Entity {
    id: Int!
    createdAt: String!
    email: String!
    givenName: String
    familyName: String
    profileDescription: String
    stories(limit: Int): [Story!]!
    story(id: Int): Story
    readingLists(limit: Int): [ReadingList!]!
    readingList(title: String): ReadingList
}

type Story implements NamedEntity {
    id: Int!
    createdAt: String!
    title: String!
    description: String
    content: String!
    author: User!
}

input CreateStoryContent {
    title: String!
    description: String
    content: String!
    authorId: Int!
}

input UpdateStoryContent {
    title: String!
    description: String
    content: String!
}

type ReadingList implements NamedEntity {
    id: Int!
    createdAt: String!
    title: String!
    author: User!
    stories(limit: Int): [Story!]!
}

input CreateReadingListContent {
    title: String!
    authorId: Int!
}

input UpdateReadingListContent {
    title: String!
}

type Query {
    user(id: Int!): User
    story(id: Int!): Story
    stories(searchString: String!, limit: Int): [Story]!
}

type Mutation {
    signIn(content: SignInContent!): AuthPayload
    createStory(content: CreateStoryContent!): Story
    updateStory(id: Int! content: UpdateStoryContent!): Story
    deleteStory(id: Int!): Story
    createReadingList(content: CreateReadingListContent!): ReadingList
    updateReadingList(title: String!, userId: Int!, content: UpdateReadingListContent!): ReadingList
    deleteReadingList(title: String!, userId: Int!): ReadingList
    addStoryIntoReadingList(title: String!, userId: Int!, storyId: Int!): ReadingList
    removeStoryFromReadingList(title: String!, userId: Int!, storyId: Int!): ReadingList
}
