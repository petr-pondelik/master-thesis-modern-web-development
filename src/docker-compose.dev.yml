version: "3.7"

services:

  mwd-postgres:
    image: postgres:12.10
    container_name: mwd-postgres
    restart: always
    environment:
      - POSTGRES_USER=mwd_u
      - POSTGRES_PASSWORD=mwd_p
      - POSTGRES_DB=mwd_db
    ports:
      - '5438:5432'
    volumes:
      - ./postgres/postgres-data:/var/lib/postgresql/data

  mwd-prisma-db-init:
    container_name: mwd-prisma-db-init
    build:
      context: ./prisma-tools
      dockerfile: Dockerfile
    command: yarn prisma:up
    depends_on:
      - mwd-postgres

  mwd-prisma-studio:
    container_name: mwd-prisma-studio
    build:
      context: ./prisma-tools
      dockerfile: Dockerfile-prisma-studio
    depends_on:
      - mwd-postgres
      - mwd-prisma-db-init
    ports:
      - '5555:5555'
    command: yarn prisma studio

  mwd-server-side:
    container_name: mwd-server-side
    build:
      context: ./server-side
      dockerfile: Dockerfile
    # Mount our host directory to the docker container
    # Mount api directory (./server-side) to (:) docker container (/usr/src/app)
    # Reflect host file changes within the container
    volumes:
      - ./server-side:/usr/mwd/server-side
    # Run in debug mode: yarn run start:debug
    # Run in dev mode: yarn run start:dev
    depends_on:
      - mwd-postgres
      - mwd-prisma-db-init
    expose:
      - '3000'
    ports:
      - '8080:3000'
    command: >
      sh -c "yarn &&
             yarn graphql:generate-classes &&
             yarn prisma:generate-client &&
             yarn start:dev"

  mwd-client-side-rest:
    container_name: mwd-client-side-rest
    build:
      context: ./client-side-rest
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./client-side-rest/src:/usr/mwd/client-side-rest/src
    depends_on:
      - mwd-postgres
      - mwd-prisma-db-init
      - mwd-server-side
    expose:
      - '3000'
    ports:
      - '3100:3000'
    command: >
      sh -c "yarn start"

  mwd-client-side-graphql:
    container_name: mwd-client-side-graphql
    build:
      context: ./client-side-graphql
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./client-side-graphql/src:/usr/mwd/client-side-graphql/src
    depends_on:
      - mwd-postgres
      - mwd-prisma-db-init
      - mwd-server-side
    expose:
      - '3000'
    ports:
      - '3200:3000'
    command: >
      sh -c "yarn start"

# Commands to build and run the composition
#   docker-compose build
#   docker-compose up
